http {
  include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

  # HTTP upstreams
{{ range . }}
{{ if eq .ApplicationProtocol "http" }}
  upstream {{ .Id }}_cluster {
    {{ range .Hosts }}
    server {{ .Ip }}:{{ .Port }};
    {{ end }}
  }
{{ end }}
{{ end }}

  # Add forwarding based on domains
{{ range . }}
{{ if eq .ApplicationProtocol "http" }}
{{ if .Domains }}
  server {
    listen 80;
    server_name{{ range .Domains }} {{ . }}{{ end }};

    location / {
      {{ .Config }}
      proxy_pass http://{{ .Id }}_cluster;
    }
  }
{{ end }}
{{ end }}
{{ end }}

  server {
    listen       80  default_server;
    server_name  _;

    # Add forwarding based on path
    {{ range . }}
    {{ if eq .ApplicationProtocol "http" }}
    {{ if .ProxyPath }}
    location {{ .ProxyPath }}/ {
      {{ .Config }}
      proxy_pass http://{{ .Id }}_cluster/;
    }
    {{ end }}
    {{ end }}
    {{ end }}

    location /nginx_status {
      stub_status on;
      access_log   off;
    }
  }
}

stream {
{{ range . }}
{{ if ne .ApplicationProtocol "http" }}
  upstream {{ .Id }}_cluster {
    {{ range .Hosts }}
    server {{ .Ip }}:{{ .Port }};
    {{ end }}
  }

  server {
    listen {{ .ListenPort }};

    proxy_pass {{ .Id }}_cluster;
  }
{{ end }}
{{ end }}
}
